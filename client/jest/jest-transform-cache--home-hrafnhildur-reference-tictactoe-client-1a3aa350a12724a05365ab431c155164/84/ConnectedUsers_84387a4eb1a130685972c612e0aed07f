/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = 'src/status/ConnectedUsers.js';var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();exports.default =




function (injected) {
    var socket = injected('socket'); /* istanbul ignore next */var

    ConnectedUsers = function (_React$Component) {_inherits(ConnectedUsers, _React$Component);
        function /* istanbul ignore next */ConnectedUsers() {/* istanbul ignore next */_classCallCheck(this, ConnectedUsers);var _this = _possibleConstructorReturn(this, (ConnectedUsers.__proto__ || Object.getPrototypeOf(ConnectedUsers)).call(this));

            /* istanbul ignore next */_this.state = {
                users: {},
                me: {
                    userName: "" } };


            /* istanbul ignore next */_this.userNameChanged = /* istanbul ignore next */_this.userNameChanged.bind( /* istanbul ignore next */_this); /* istanbul ignore next */return _this;
        }_createClass(ConnectedUsers, [{ key: 'componentWillMount', value: function componentWillMount()
            {/* istanbul ignore next */var _this2 = this;
                socket.on('userJoined', function (user) {
                    var users = /* istanbul ignore next */_this2.state.users;
                    users[user.clientId] = user;
                    /* istanbul ignore next */_this2.setState({ users: users });
                });
                socket.on('userAcknowledged', function (user) {
                    /* istanbul ignore next */_this2.setState({ me: user });
                });
                socket.on('userLeft', function (user) {
                    var users = /* istanbul ignore next */_this2.state.users;
                    delete users[user.clientId];
                    /* istanbul ignore next */_this2.setState({ users: users });
                });
                socket.on('userChanged', function (user) {
                    var users = /* istanbul ignore next */_this2.state.users;
                    users[user.clientId] = user;
                    if (user.clientId === /* istanbul ignore next */_this2.state.me.clientId) {
                        /* istanbul ignore next */_this2.setState({
                            me: user });

                    }
                    /* istanbul ignore next */_this2.setState({
                        users: users });

                });
                socket.on('usersConnected', function (users) {
                    /* istanbul ignore next */_this2.setState({ users: users });
                });

            } }, { key: 'userNameChanged', value: function userNameChanged(
            event) {
                socket.emit('changeUserName', { userName: event.target.value });
            } }, { key: 'render', value: function render()
            {/* istanbul ignore next */var _this3 = this;
                var users = /* istanbul ignore next */_lodash2.default.map(this.state.users, function (user) {
                    return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'li', /* istanbul ignore next */{ key: user.clientId, __source: { fileName: _jsxFileName, lineNumber: 56 }, __self: _this3 }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 56 }, __self: _this3 }, user.clientId), /* istanbul ignore next */' : ', /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 56 }, __self: _this3 }, user.userName)));
                });

                return (
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'ConnectedUsers', __source: { fileName: _jsxFileName, lineNumber: 60 }, __self: this },
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 61 }, __self: this }),
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'label', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 62 }, __self: this }, /* istanbul ignore next */'Me:'),
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{ type: 'text', value: this.state.me.userName, onChange: this.userNameChanged, __source: { fileName: _jsxFileName, lineNumber: 63 }, __self: this }),
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 64 }, __self: this }),
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'UserList', __source: { fileName: _jsxFileName, lineNumber: 65 }, __self: this },
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 66 }, __self: this }, /* istanbul ignore next */'Connected:'),
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'ul', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 67 }, __self: this },
                                users))));





            } }]);return ConnectedUsers;}( /* istanbul ignore next */_react2.default.Component);

    return ConnectedUsers;

};var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);var /* istanbul ignore next */_lodash = require('lodash'); /* istanbul ignore next */var _lodash2 = _interopRequireDefault(_lodash); /* istanbul ignore next */require('./ConnectedUsers.css'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}